// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=dA, b=dB, c=dC, d=dD,
        e=dE, f=dF, g=dG, h=dH);

    RAM512(in=in, load=dA, address=address[3..11], out=mamA);
    RAM512(in=in, load=dB, address=address[3..11], out=memB);
    RAM512(in=in, load=dC, address=address[3..11], out=memC);
    RAM512(in=in, load=dD, address=address[3..11], out=memD);
    RAM512(in=in, load=dE, address=address[3..11], out=memE);
    RAM512(in=in, load=dF, address=address[3..11], out=memF);
    RAM512(in=in, load=dG, address=address[3..11], out=memG);
    RAM512(in=in, load=dH, address=address[3..11], out=memH);

    Mux8Way16(a=memA, b=memB, c=memC, d=memD,
            e=memE, f=memF, g=memG, h=memH, sel=address[0..2], out=out);
}